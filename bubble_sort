import random
import time
from timeit import default_timer as timer
import matplotlib.pyplot as plt
A, B, C = [], [], []

def bubble_sort(alist):
    n = len(alist)
    fig = plt.gcf()
    fig.set_size_inches(10, 10)

    while True:
        swapped = False
        for i in range(1, n):
            start_wall = timer()
            start_CPU = time.process_time()
            if alist[i - 1] > alist[i]:
                alist[i - 1], alist[i] = alist[i], alist[i - 1]
                swapped = True

            end_wall = timer()
            end_CPU = time.process_time()
            Wall_time = end_wall - start_wall
            CPU_time = end_CPU - start_CPU
            C.append(i)
            A.append(Wall_time)
            B.append(CPU_time)

        n -= 1
        if not swapped:
            break
    plt.plot(C, A)
    plt.plot(C, B)
    plt.show()
    return alist

N = [random.randrange(1000) for i in range(10)]
for j in range(len(N)):
    print (N[j])
nlist = bubble_sort(N)
for i in range(len(nlist)):
    print (nlist[i])
